# Credit : https://gist.github.com/teppeis/4117588
#        : http://yuroyoro.hatenablog.com/entry/20101008/1286531851
#        : https://github.com/bundai223/dotfiles/blob/master/.gitconfig_global

[include]
    path = ~/.gitconfig.local

[core]
    excludesfile = ~/.gitignore
    pager = LESS=-R less
    editor = vim
    autocrlf = input


[config]
    ui = true

[http]
    sslVerify = false

[color]
    ui = auto
    status = auto
    diff = auto
    branch = auto
    interactive = auto
    grep = auto

[push]
    default = current

[branch]
    # autosetuprebase = always

[merge]
    ff = false

[pull]
    rebase = true

[alias]
    ps = push
    pl = pull
    st = status --short --branch
    sh = show
    sh2 = show HEAD~2 # show 2nd latest commit info from the latest.
    sh3 = show HEAD~3
    sh4 = show HEAD~4
    sh5 = show HEAD~5
    ft = fetch
    ad = add
    co = checkout
    cm = commit
    info = remote show origin
    log-graph = log --graph --decorate --oneline
    glog = log --pretty=format:\"%C(red)%h%Creset %C(cyan)<%an>%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset\" --abbrev-commit --date=relative --graph
    vlog = log --pretty=format:\"%C(red)%h%Creset %C(cyan)<%an>%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset\" --abbrev-commit --date=relative
    ll = log --stat --abbrev-commit
    ln = log --graph -n 20 --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(green)- %an, %cr%Creset' --name-status
    lp = log --oneline -n 20 -p
    ls = log --stat # display commit log with changed files
    ls1 = log --stat --abbrev-commit -n 1 # display previous log
    s = status --short --branch
    st = status
    fix-commit-with-msg = commit -a --amend -m # 直前のコミットを修正してコミット
    resetcm = reset --soft # 直前のコミットを取り消す(working directoryはそのまま)
    resetcm-hard = reset --hard # 直前のコミットを取り消す(working directoryも取り消す)
    aa = add -A
    unstagef = git reset HEAD # indexからfileを取り消す
    unstaged = git reset HEAD # indexからdirectoryを取り消す
    branch-remote = remote -v # remote branchの情報表示
    branch-local = branch -a # local branchを表示
    ds = diff --staged --color-words # indexとHEADのdiffを表示. --staged = --cached
    d1 = diff HEAD~ # HEADとHEADから一つ前のdiff
    d2 = diff HEAD~~ # HEADとHEADから2個前のdiff
    d3 = diff HEAD~~~
    d4 = diff HEAD~~~~
    d5 = diff HEAD~~~~~
    dm = diff master # HEADとlocal masterのdiff
    drm = diff remotes/origin/master
    dd = diff develop
    drd = diff remotes/origin/develop
    # mergeの際にconflictが起きたファイルを編集
    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
    gr = grep
